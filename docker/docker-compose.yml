# We have the following profiles:
#   - default         Only services needed for production
#   - mariadb         A MariaDB service for manual tests
#   - postgresql      A PostgreSQL service for manual tests
#   - test            A container for automated tests, plus
#                     any database container used by the tests
#   - full            All testing and production services


# To test databases, we set their authentication variables
# here and then we pass them to the relevant containers

x-mariadb-env: &mariadb-env
  MYSQL_ROOT_PASSWORD: rSecret
  MYSQL_DATABASE:
  MYSQL_USER: queryviz
  MYSQL_PASSWORD: S3cretz

x-postgresql-env: &postgresql-env
  POSTGRES_PASSWORD: rSecret
  POSTGRES_USER: queryviz
  POSTGRES_DB: queryviz

services:
  qv-generator:
    build: 
      context: ../
      dockerfile: docker/generator/Dockerfile
      target: qv-gen-app
    container_name: qv-generator
    volumes:
      - qv-files:/app/output
      - ../config.yaml:/app/config.yaml:ro
    restart: on-failure
    networks:
      - qv
    profiles:
      - default
      - mariadb
      - postgresql
      - full
    
  qv-web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: qv-web
    volumes:
      - qv-files:/usr/share/nginx/html/plots:ro
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - qv-generator
    networks:
      - qv
    profiles:
      - default
      - mariadb
      - postgresql
      - full

  qv-test:
    build:
      context: ../
      dockerfile: docker/generator/Dockerfile
      target: qv-gen-test
    container_name: qv-test
    environment:
      <<: [*mariadb-env, *postgresql-env]
    profiles:
      - test
      - full
    networks:
      - qv
    depends_on:
      mariadb:
        condition: service_healthy

  mariadb:
    image: mariadb:11.8
    container_name: qv-test-mariadb
    environment:
      <<: *mariadb-env
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - qv
    profiles:
      - mariadb
      - test
      - full
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 30s

  postgresql:
    image: postgres:16
    container_name: qv-test-postgresql
    environment:
      <<: *postgresql-env
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - qv
    profiles:
      - postgresql
      - test
      - full
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 30s

networks:
  qv:
    external: true

volumes:
  qv-files:
    name: qv-files
